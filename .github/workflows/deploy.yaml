name: Frontend Cloudfront Deployment

on:
  push:
    branches:
      - test-branch

  # Starting Build Process      
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

  # Install NPM Package Manager
    - name: Npm Install
      run: npm install

    - name: Custom Fixes for Webpack Library
      run: |
        cp ./tmp/webpack.config.js ./node_modules/react-scripts/config/webpack.config.js
        npm i stream-browserify --save
        npm i crypto-browserify --save
        npm i stream-http --save
        npm i https-browserify --save
        npm i os-browserify --save

  # Run NPM build
    - name: Npm Build
      run: npm run build
      env:
        AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
        AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
        LOGIN_REDIRECT_URL: ${{ secrets.LOGIN_REDIRECT_URL }}
        MORALIS_DAPP_URL: ${{ secrets.MORALIS_DAPP_URL }}
        MORALIS_APPLICATION_ID: ${{ secrets.MORALIS_APPLICATION_ID }}
        MAGIC_LINK_API_KEY: ${{ secrets.MAGIC_LINK_API_KEY }}
        BASE_URL: ${{ secrets.BASE_URL }}
        FUNGE_EXPRESSJS_SERVER_BASE_URL: ${{ secrets.FUNGE_EXPRESSJS_SERVER_BASE_URL }}

    - name: Share artifact inside workflow
      uses: actions/upload-artifact@v1
      with:
        name: build-artifact
        path: build
   
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:

  # Get build artifact
    - name: Get artifact
      uses: actions/download-artifact@v1
      with:
        name: build-artifact

  # Configuring AWS Credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

  # Copy build to s3
    - name: Deploy to S3
      run: aws s3 sync . s3://www.fungeapp.com
      working-directory: build-artifact

  # Creating AWS CloudFront Invalidation
    - name: Create Cloudfront Invalidation
      run: |
        DISTRIBUTION_ID=E3QRIALGM07SYH
        aws cloudfront create-invalidation --distribution-id E3QRIALGM07SYH --paths /*
      working-directory: build-artifact